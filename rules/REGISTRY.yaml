rules:
- id: RULE.Spacing.duration_base_with_optical_corrections
  title: Duration-proportional spacing with optical adjustments
  agent: SpacingAgent
  intent: spacing
  priority: 100
  depends_on: []
  inputs:
  - durations
  - stems
  - preItems
  - postItems
  - noteheadWidths
  parameters:
    min_column_gap: 0.5 sp
    accidental_leading_padding: 0.25 sp
    articulation_padding: 0.2 sp
    optical_stem_adj_weight: '0.4'
  procedure: 'Compute base widths from durations; inflate by pre/post items; add penalties
    for opposing stems; increase gaps until below threshold; enforce min_column_gap.

    '
  exceptions:
  - grace_clusters_scale_widths
  outputs:
  - columnPositions
  - columnMinWidths
  - gaps
  - leadIn
  side_effects:
  - SpacingSpanner.constraints
  test_plan:
    cases:
    - name: Opposing stems add optical gap
      expectations:
      - path: /gaps/1
        op: '>='
        value: 0.7
        tolerance: 0.1
    - name: Sharp causes lead-in
      expectations:
      - path: /leadIn/2
        op: '>='
        value: 0.25
        tolerance: 0.05
    fixtures:
      font: Bravura
      staffSize: 20pt
      paper: A4
  trace:
  - docs/horizontal-spacing
  - internals/SpacingSpanner
  smufl_inputs:
  - noteheadBlack.advance
  - noteheadWhole.advance
- id: RULE.Spacing.keep_inside_system_constraints
  title: Keep-inside-line/system packing
  agent: SpacingAgent
  intent: spacing
  priority: 110
  depends_on:
  - RULE.Spacing.duration_base_with_optical_corrections
  inputs:
  - lineWidth
  - columns
  parameters:
    line_fill_penalty: '1.0'
    overfull_penalty: '10.0'
  procedure: Pack columns to fit width minimizing penalties; prohibit overflow; prefer
    fewer loose ends.
  exceptions: []
  outputs:
  - systemBreaks
  - columnPositions
  - overfull
  side_effects: []
  test_plan:
    cases:
    - name: Near break threshold
      expectations:
      - path: /overfull
        op: ==
        value: 0.0
  trace:
  - docs/line-breaking
  smufl_inputs:
  - noteheadBlack.advance
  - noteheadWhole.advance
- id: RULE.Beaming.auto_knee_threshold
  title: Insert kneed beam on excessive vertical gap
  agent: BeamingAgent
  intent: placement
  priority: 200
  depends_on: []
  inputs:
  - verticalGapSP
  - beamThicknessSP
  parameters:
    knee_gap_threshold: 5.5 sp + beam_thickness
  procedure: If vertical gap >= threshold, split beam and recompute segment angles.
  exceptions:
  - forced_beaming_overrides
  outputs:
  - beamSegments
  - kneed
  - thresholdUsedSP
  side_effects: []
  test_plan:
    cases:
    - name: Large leap triggers knee
      expectations:
      - path: /kneed
        op: ==
        value: 1.0
  trace:
  - docs/beaming/auto-knee
  - internals/beam-interface
  smufl_inputs:
  - beam.thickness
- id: RULE.Beaming.compound_meter_grouping
  title: Group beams by dotted-beat in compound meters
  agent: BeamingAgent
  intent: placement
  priority: 215
  depends_on:
  - RULE.Beaming.subdivision_preference
  inputs:
  - timeSignature
  - noteValues
  parameters:
    6/8: 3+3 eighths
    9/8: 3+3+3 eighths
    12/8: 3+3+3+3 eighths
  procedure: In 6/8, 9/8, 12/8, prefer breaks at dotted-beat boundaries (every 3
    eighths) unless explicit overrides or rests split the group.
  exceptions:
  - forced_beaming_overrides
  - rests_split_groups
  outputs:
  - beamBreaks
  - groups
  side_effects: []
  test_plan:
    cases:
    - name: 6/8 two dotted beats
      expectations:
      - path: /beamBreaks/count
        op: ==
        value: 1.0
    - name: 9/8 three dotted beats
      expectations:
      - path: /beamBreaks/count
        op: ==
        value: 2.0
  trace:
  - docs/beaming/compound
  smufl_inputs:
  - beam.thickness
  - noteheadBlack.bbox

- id: RULE.BeamCollision.resolve_overlaps
  title: Resolve beam collisions by minimal offsets
  agent: CollisionAgent
  intent: collision
  priority: 355
  depends_on:
  - RULE.Beaming.geometry_slope_and_segments
  inputs:
  - beamSegments
  - nearbyGrobs
  parameters:
    min_clearance_sp: 0.25
  procedure: Compute minimal offsets to resolve overlaps between beams and nearby grobs; respect min_clearance.
  exceptions: []
  outputs:
  - offsets
  side_effects: []
  test_plan:
    cases:
    - name: minimal_offsets
      expectations:
      - path: /offsets/count
        op: ">="
        value: 0.0
  trace:
  - docs/beaming/collision
  smufl_inputs:
  - beam.thickness

- id: RULE.RestCollision.resolve_overlaps
  title: Resolve rest collisions with note columns
  agent: CollisionAgent
  intent: collision
  priority: 356
  depends_on:
  - RULE.Spacing.duration_base_with_optical_corrections
  inputs:
  - restBBoxes
  - noteColumnBBoxes
  parameters:
    min_gap_sp: 0.3
  procedure: Offset rests horizontally/vertically to maintain minimum gaps from note columns.
  exceptions: []
  outputs:
  - restOffsets
  side_effects: []
  test_plan:
    cases:
    - name: gaps_kept
      expectations:
      - path: /restOffsets/count
        op: ">="
        value: 0.0
  trace:
  - docs/collisions/rests
  smufl_inputs:
  - noteheadBlack.bbox

- id: RULE.DynamicAlign.kerning_with_hairpins
  title: Dynamic text kerning with hairpins and lyrics
  agent: DynamicsTextAgent
  intent: placement
  priority: 705
  depends_on:
  - RULE.Dynamics.align_with_noteheads_and_stems
  inputs:
  - dynamicBBox
  - hairpinBBox
  - lyricBBox
  parameters:
    min_kerning_sp: 0.2
    hairpin_clearance_sp: 0.3
    lyrics_baseline_variance_sp: 0.15
  procedure: Adjust dynamic text x/y to avoid overlaps with hairpins and lyrics while preserving baseline preference.
  exceptions: []
  outputs:
  - dynamicPosition
  side_effects: []
  test_plan:
    cases:
    - name: kerning_applied
      expectations:
      - path: /dynamicPosition/x
        op: ">="
        value: 0.0
  trace:
  - docs/dynamics/kerning
  smufl_inputs:
  - dynamicPiano.baseline
  - dynamicForte.baseline
  - hairpinCrescendo.bbox
  - hairpinDecrescendo.bbox

- id: RULE.Lyrics.baseline_adjustment_with_variance
  title: Lyrics baseline adjustment with variance tolerance
  agent: VerticalStackAgent
  intent: placement
  priority: 611
  depends_on:
  - RULE.Lyrics.vertical_alignment_with_baselines
  inputs:
  - lyricBBox
  - staffBaseline
  - varianceSP
  parameters:
    max_variance_sp: 0.2
    prefer_stable_baseline: true
  procedure: Adjust lyrics baseline by up to varianceSP (capped by max_variance_sp) to accommodate descenders and maintain visual consistency across a system.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: within_variance_cap
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 0.0
  trace:
  - docs/lyrics/baseline
  smufl_inputs:
  - lyricsText.bbox

- id: RULE.Beaming.cross_voice_mixed_stem_slope_balance
  title: Beaming slope balance across voices with mixed stems
  agent: BeamingAgent
  intent: placement
  priority: 222
  depends_on:
  - RULE.Beaming.geometry_slope_and_segments
  inputs:
  - voiceNotePositionsSP
  - voiceStemDirections
  - beamThicknessSP
  parameters:
    balance_weight: '0.6'
    min_clearance_sp: 0.25
  procedure: Choose a beam slope minimizing the difference of beamlet lengths across voices while maintaining minimum clearance to nearby symbols.
  exceptions:
  - forced_beam_slope
  outputs:
  - slopeSPPerSpaceAdjusted
  - balanceScore
  side_effects: []
  test_plan:
    cases:
    - name: balanced_slope
      expectations:
      - path: /slopeSPPerSpaceAdjusted
        op: '<='
        value: 0.5
  trace:
  - docs/beaming/cross-voice
  smufl_inputs:
  - beam.thickness
  - noteheadBlack.bbox

- id: RULE.Dynamics.stacked_kerning_with_system_breaks
  title: Stacked dynamics kerning with system break awareness
  agent: DynamicsTextAgent
  intent: placement
  priority: 706
  depends_on:
  - RULE.Dynamics.align_with_noteheads_and_stems
  inputs:
  - dynamicBBoxes
  - hairpinBBoxes
  - atSystemBreak
  parameters:
    stacked_min_gap_sp: 0.25
    break_margin_sp: 0.3
  procedure: Kerning for multiple dynamic marks on the same beat; enforce stacked_min_gap and increase margins near system breaks.
  exceptions: []
  outputs:
  - dynamicPositions
  side_effects: []
  test_plan:
    cases:
    - name: stacked_gap_respected
      expectations:
      - path: /dynamicPositions/count
        op: ">="
        value: 1.0
  trace:
  - docs/dynamics/stacking
  smufl_inputs:
  - dynamicPiano.baseline
  - dynamicMezzoPiano.baseline
  - dynamicMezzoForte.baseline
  - dynamicForte.baseline
  - dynamicFortepiano.baseline
  - dynamicSforzando.baseline

- id: RULE.Lyrics.hyphen_melisma_spacing_interaction
  title: Lyrics hyphen and melisma spacing interaction
  agent: VerticalStackAgent
  intent: placement
  priority: 612
  depends_on:
  - RULE.Lyrics.vertical_alignment_with_baselines
  inputs:
  - syllableBBoxes
  - hyphenBBoxes
  - melismaLineBBoxes
  - staffBaseline
  parameters:
    hyphen_min_gap_sp: 0.3
    melisma_baseline_bias_sp: 0.1
  procedure: Ensure hyphen gaps meet minimums and adjust baseline slightly under melismas to avoid collisions with stems/beams.
  exceptions: []
  outputs:
  - lyricOffsets
  - baselineYOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: hyphen_gap_minimum
      expectations:
      - path: /lyricOffsets/count
        op: ">="
        value: 1.0
  trace:
  - docs/lyrics/hyphens
  smufl_inputs:
  - lyricsText.bbox
- id: RULE.NoteSpacing.spacing_policy
  title: Note spacing policy (column gaps and alignment)
  agent: SpacingAgent
  intent: spacing
  priority: 120
  depends_on:
  - RULE.Spacing.duration_base_with_optical_corrections
  inputs:
  - columns
  - minGapsSP
  parameters:
    optical_stem_weight: 0.4
  procedure: Adjust note columns to meet minimum gaps and align beats while respecting optical stem weights.
  exceptions: []
  outputs:
  - columnPositions
  side_effects: []
  test_plan:
    cases:
    - name: gaps_respected
      expectations:
      - path: /columnPositions/0
        op: '<='
        value: 0.0
  trace:
  - docs/spacing/note-columns
  smufl_inputs:
  - noteheadBlack.advance

- id: RULE.DurationLine.placement_policy
  title: Duration line placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 635
  depends_on: []
  inputs:
  - systemBaseline
  - durationLineBBox
  parameters:
    min_distance_sp: 0.8
  procedure: Place duration lines below staff with minimum distance and avoid collisions with lyrics/dynamics.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: duration_line_offset
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 0.8
  trace:
  - docs/duration-lines
  smufl_inputs: []

- id: RULE.Beaming.slope_with_clearance
  title: Adjust beam slope to maintain obstacle clearance
  agent: BeamingAgent
  intent: placement
  priority: 221
  depends_on:
  - RULE.Beaming.geometry_slope_and_segments
  inputs:
  - notePositionsSP
  - stemDirections
  - beamThicknessSP
  - nearbyGrobs
  parameters:
    min_clearance_sp: 0.25
    slope_penalty_weight: '0.5'
  procedure: Evaluate candidate slopes near the geometric optimum; penalize steeper
    slopes and choose the minimal penalty that satisfies min_clearance from obstacles.
  exceptions:
  - forced_beam_slope
  outputs:
  - slopeSPPerSpaceAdjusted
  - minClearanceSP
  side_effects: []
  test_plan:
    cases:
    - name: maintain_clearance
      expectations:
      - path: /minClearanceSP
        op: '>='
        value: 0.25
        tolerance: 0.05
  trace:
  - docs/beaming/slope
  - internals/beam-interface
  smufl_inputs:
  - beam.thickness
  - noteheadBlack.bbox

- id: RULE.NoteSpacing.optical_stem_weight_scalars
  title: Compute optical stem-weight scalars per column
  agent: SpacingAgent
  intent: spacing
  priority: 121
  depends_on:
  - RULE.Spacing.duration_base_with_optical_corrections
  inputs:
  - stemDirections
  - beatStrengths
  parameters:
    up_weight: '0.4'
    down_weight: '0.4'
    strong_beat_bonus: '0.1'
  procedure: For each column, compute a scalar based on stem direction and beat strength;
    used by spacing_policy to inflate minimum gaps optically.
  exceptions: []
  outputs:
  - weights
  side_effects: []
  test_plan:
    cases:
    - name: weights_present
      expectations:
      - path: /weights/count
        op: '>='
        value: 1.0
  trace:
  - docs/spacing/optical
  - internals/SpacingSpanner
  smufl_inputs:
  - noteheadBlack.advance
- id: RULE.Arpeggio.placement_policy
  title: Arpeggio placement policy (avoid collisions)
  agent: CollisionAgent
  intent: placement
  priority: 365
  depends_on: []
  inputs:
  - chordBBox
  - nearbyGrobs
  parameters:
    prefer_centered: true
  procedure: Place arpeggio spanner along chord; offset to avoid collisions with text/lyrics.
  exceptions: []
  outputs:
  - position
  side_effects: []
  test_plan:
    cases:
    - name: arpeggio_position
      expectations:
      - path: /position/y
        op: ">="
        value: 0.0
  trace:
  - docs/arpeggios
  smufl_inputs: []

- id: RULE.Fingering.placement_policy
  title: Fingering placement near noteheads with collision avoidance
  agent: CollisionAgent
  intent: placement
  priority: 366
  depends_on: []
  inputs:
  - fingeringBBox
  - noteheadBBoxes
  parameters:
    prefer_above: true
  procedure: Place fingering above/below/side of notehead to minimize collisions.
  exceptions: []
  outputs:
  - position
  side_effects: []
  test_plan:
    cases:
    - name: fingering_position
      expectations:
      - path: /position/y
        op: ">="
        value: 0.0
  trace:
  - docs/fingering
  smufl_inputs: []

- id: RULE.Pedal.line_and_text_policy
  title: Pedal line and text placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 645
  depends_on: []
  inputs:
  - systemBaseline
  - pedalTextBBox
  parameters:
    min_distance_sp: 0.8
  procedure: Place pedal text/line below system with minimum distance.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: pedal_offset
      expectations:
      - path: /yOffsetSP
        op: ">="
        value: 0.8
  trace:
  - docs/pedal
  smufl_inputs: []

- id: RULE.TrillSpanner.placement_policy
  title: Trill spanner placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 646
  depends_on: []
  inputs:
  - trillBBox
  - staffTop
  parameters:
    min_distance_sp: 0.8
  procedure: Place trill spanner above staff with minimum distance and avoid collisions.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: trill_offset
      expectations:
      - path: /yOffsetSP
        op: ">="
        value: 0.8
  trace:
  - docs/trill
  smufl_inputs: []

- id: RULE.Beaming.geometry_slope_and_segments
  title: Beam slope and segment geometry selection
  agent: BeamingAgent
  intent: placement
  priority: 220
  depends_on:
  - RULE.Beaming.subdivision_preference
  inputs:
  - notePositionsSP
  - stemDirections
  - beamThicknessSP
  parameters:
    max_slope_sp_per_space: 0.5
    prefer_shallow_beams_weight: '0.6'
  procedure: Fit a line through stem tips; clamp slope by max; round to visually
    pleasing angles; output segment endpoints.
  exceptions:
  - forced_beam_slope
  outputs:
  - slopeSPPerSpace
  - segments
  side_effects: []
  test_plan:
    cases:
    - name: shallow_preference
      expectations:
      - path: /slopeSPPerSpace
        op: <=
        value: 0.5
  trace:
  - docs/beaming/slope
  smufl_inputs:
  - beam.thickness

- id: RULE.Beaming.rests_split_groups
  title: Split beamed groups at rests
  agent: BeamingAgent
  intent: placement
  priority: 221
  depends_on:
  - RULE.Beaming.subdivision_preference
  inputs:
  - sequence
  parameters:
    split_on_rests: true
  procedure: Terminate a beamed group when a rest occurs; start a new group after
    the rest.
  exceptions: []
  outputs:
  - groups
  - beamBreaks
  side_effects: []
  test_plan:
    cases:
    - name: rest_splits_group
      expectations:
      - path: /beamBreaks/count
        op: '>='
        value: 1.0
  trace:
  - docs/beaming/rests
  smufl_inputs:
  - beam.thickness
- id: RULE.Beaming.subdivision_preference
  title: Subdivide beams according to meter grouping
  agent: BeamingAgent
  intent: placement
  priority: 210
  depends_on: []
  inputs:
  - timeSignature
  - noteValues
  parameters:
    4/4: 2+2 eighths
    7/8: 2+2+3 | 3+2+2
  procedure: Prefer breaks at sub-beat boundaries unless overridden.
  exceptions: []
  outputs:
  - beamBreaks
  side_effects: []
  test_plan:
    cases:
    - name: 4/4 standard grouping
      expectations:
      - path: /beamBreaks/count
        op: ==
        value: 2.0
  trace:
  - docs/beaming/subdivision
  smufl_inputs:
  - beam.thickness

- id: RULE.Beaming.suppress_flags_when_beamed
  title: Suppress individual flags on notes within beamed groups
  agent: BeamingAgent
  intent: rendering
  priority: 220
  depends_on:
  - RULE.Beaming.subdivision_preference
  inputs:
  - isBeamedGroup
  parameters: {}
  procedure: If a note belongs to a beamed group, do not draw its individual flag(s).
  exceptions: []
  outputs:
  - drawFlags
  side_effects: []
  test_plan:
    cases:
    - name: beamed_group
      expectations:
      - path: /drawFlags
        op: ==
        value: 0.0
    - name: single_unbeamed_note
      expectations:
      - path: /drawFlags
        op: ==
        value: 1.0
  trace:
  - docs/beaming/flags
  smufl_inputs:
  - beam.thickness
- id: RULE.Slur.curvature_choice_with_collision_penalty
  title: Slur curvature selected by minimal collision/penalty
  agent: TieSlurAgent
  intent: placement
  priority: 300
  depends_on: []
  inputs:
  - candidateCurves
  - nearbyGrobs
  parameters:
    collision_penalty: '1.0'
    excess_curvature_penalty: '0.4'
    endpoint_clearance: 0.25 sp
  procedure: Score candidates; penalize collisions and excess curvature; pick minimal
    score with endpoint clearance.
  exceptions:
  - cross_system_phrase_looser
  outputs:
  - chosenCurveIndex
  - minClearanceSP
  - score
  side_effects: []
  test_plan:
    cases:
    - name: Accidental under slur
      expectations:
      - path: /minClearanceSP
        op: '>='
        value: 0.25
        tolerance: 0.05
  trace:
  - docs/slurs
  - internals/slur-grob
  smufl_inputs: []
- id: RULE.Collision.priority_lattice
  title: Collision resolution priority ordering
  agent: CollisionAgent
  intent: collision
  priority: 350
  depends_on: []
  inputs:
  - grobTypes
  - proximities
  parameters:
    priority: stem > notehead > accidental > dynamic > lyric
  procedure: Move lower-priority objects first, minimal delta to resolve overlaps;
    preserve anchors.
  exceptions:
  - forced_positions
  outputs:
  - offsetsPerGrob
  side_effects: []
  test_plan:
    cases:
    - name: Dynamic vs. lyric
      expectations:
      - path: /offsets/dynamic/y
        op: '>='
        value: 0.2
        tolerance: 0.05
  trace:
  - docs/collisions
  - internals/collision-resolution
  smufl_inputs:
  - noteheadBlack.bbox
  - dynamicForte.bbox
  - lyricsText.bbox
- id: RULE.Accidental.leading_padding_and_column_inflation
  title: Accidental lead-in spacing
  agent: AccidentalAgent
  intent: spacing
  priority: 400
  depends_on:
  - RULE.Spacing.duration_base_with_optical_corrections
  inputs:
  - accidentalBBox
  - columnLeft
  - noteheadWidthSP
  - paddingSP
  parameters:
    accidental_padding: 0.25 sp
    cluster_stack_gap: 0.2 sp
  procedure: Extend left column boundary by bbox + padding; enforce stack gap for
    chords.
  exceptions: []
  outputs:
  - columnMinWidthSP
  side_effects:
  - SpacingSpanner.constraints
  test_plan:
    cases:
    - name: Single sharp
      expectations:
      - path: /columnMinWidthSP
        op: '>='
        value: 0.25
        tolerance: 0.05
  trace:
  - docs/accidentals
  - internals/spacing
  smufl_inputs:
  - accidentalSharp.bbox
  - accidentalFlat.bbox
  - accidentalNatural.bbox

- id: RULE.Accidental.cautionary_parenthesized_policy
  title: Cautionary (courtesy) accidentals — parenthesized policy
  agent: AccidentalAgent
  intent: notation
  priority: 410
  depends_on: []
  inputs:
  - previousBarPitchContext
  - currentPitch
  parameters:
    show_cautionary_when_spelling_changes: true
    parenthesis_padding_sp: 0.3
  procedure: If pitch spelling differs from previous bar’s local context, emit cautionary
    accidental with parentheses and apply padding.
  exceptions:
  - explicit_editor_override
  outputs:
  - showCautionary
  - parenthesized
  side_effects: []
  test_plan:
    cases:
    - name: spelling_changes
      expectations:
      - path: /showCautionary
        op: ==
        value: 1.0
  trace:
  - docs/accidentals/cautionary
  smufl_inputs:
  - accidentalSharp.bbox

- id: RULE.Accidental.microtonal_glyph_selection_and_spacing
  title: Microtonal accidental glyph selection and spacing
  agent: AccidentalAgent
  intent: notation
  priority: 415
  depends_on: []
  inputs:
  - pitchAlterCents
  - baseSpacingSP
  parameters:
    min_padding_sp: 0.25
  procedure: Select nearest supported glyph for the requested cent alteration; enforce
    minimum padding.
  exceptions:
  - unsupported_glyph_fallback
  outputs:
  - chosenGlyph
  - paddingSP
  side_effects: []
  test_plan:
    cases:
    - name: enforce_min_padding
      expectations:
      - path: /paddingSP
        op: '>='
        value: 0.25
  trace:
  - docs/accidentals/microtonal
  smufl_inputs:
  - accidentalSharp.bbox

- id: RULE.Tie.curvature_selection_with_clearance
  title: Tie curvature selected with clearance from noteheads
  agent: TieSlurAgent
  intent: placement
  priority: 305
  depends_on: []
  inputs:
  - endpoints
  - nearbyGrobs
  parameters:
    min_clearance_sp: 0.2
  procedure: Choose tie curvature that maintains at least min_clearance from noteheads
    and accidentals.
  exceptions: []
  outputs:
  - minClearanceSP
  side_effects: []
  test_plan:
    cases:
    - name: clearance_respected
      expectations:
      - path: /minClearanceSP
        op: '>='
        value: 0.2
  trace:
  - docs/ties
  smufl_inputs:
  - noteheadBlack.bbox

- id: RULE.Clef.mid_system_placement
  title: Mid-system clef placement and spacing
  agent: AccidentalAgent
  intent: placement
  priority: 320
  depends_on: []
  inputs:
  - clefType
  - staffSizePT
  parameters:
    left_padding_sp: 0.5
  procedure: Place clef glyph anchored to staff origin; apply left padding.
  exceptions: []
  outputs:
  - xOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: padding_applied
      expectations:
      - path: /xOffsetSP
        op: '>='
        value: 0.5
  trace:
  - docs/clefs
  smufl_inputs:
  - gClef.bbox
  - fClef.bbox

- id: RULE.KeySignature.courtesy_at_line_breaks
  title: Courtesy key signature at system breaks
  agent: AccidentalAgent
  intent: engraving
  priority: 330
  depends_on: []
  inputs:
  - lineBreaks
  - upcomingKey
  parameters:
    show_courtesy: true
  procedure: If key changes at next system, show courtesy signature at end of current
    system when enabled.
  exceptions: []
  outputs:
  - showCourtesy
  side_effects: []
  test_plan:
    cases:
    - name: courtesy_enabled
      expectations:
      - path: /showCourtesy
        op: ==
        value: 1.0
  trace:
  - docs/key-signatures/courtesy
  smufl_inputs:
  - accidentalSharp.bbox

- id: RULE.TimeSignature.courtesy_at_line_breaks
  title: Courtesy time signature at system breaks
  agent: AccidentalAgent
  intent: engraving
  priority: 331
  depends_on: []
  inputs:
  - lineBreaks
  - upcomingTimeSig
  parameters:
    show_courtesy: true
  procedure: If time signature changes at next system, show courtesy time signature
    at end of current system when enabled.
  exceptions: []
  outputs:
  - showCourtesy
  side_effects: []
  test_plan:
    cases:
    - name: courtesy_enabled
      expectations:
      - path: /showCourtesy
        op: ==
        value: 1.0
  trace:
  - docs/time-signatures/courtesy
  smufl_inputs: []

- id: RULE.Lyrics.vertical_alignment_with_baselines
  title: Lyrics vertical alignment relative to staff baselines
  agent: VerticalStackAgent
  intent: placement
  priority: 610
  depends_on: []
  inputs:
  - lyricBBox
  - staffBaseline
  parameters:
    min_distance_sp: 0.7
  procedure: Align lyrics baseline under staff with minimum distance; adjust to avoid
    collisions.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: minimum_distance
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 0.7
  trace:
  - docs/lyrics
  smufl_inputs:
  - lyricsText.bbox

- id: RULE.Ornaments.placement_above_below_with_collision
  title: Ornaments placement above/below with collision avoidance
  agent: CollisionAgent
  intent: placement
  priority: 360
  depends_on: []
  inputs:
  - ornamentBBox
  - nearbyGrobs
  parameters:
    prefer_above: true
  procedure: Prefer above-staff placement; if collision detected, move below or offset
    vertically.
  exceptions: []
  outputs:
  - position
  side_effects: []
  test_plan:
    cases:
    - name: collision_moves
      expectations:
      - path: /position/y
        op: '>='
        value: 0.0
  trace:
  - docs/ornaments
  smufl_inputs: []

- id: RULE.PartStaff.braces_brackets_layout
  title: Braces and brackets placement for part/staff groups
  agent: VerticalStackAgent
  intent: layout
  priority: 620
  depends_on: []
  inputs:
  - staves
  - grouping
  parameters:
    brace_margin_sp: 0.5
  procedure: Place braces/brackets spanning grouped staves with margin.
  exceptions: []
  outputs:
  - braceOffsets
  side_effects: []
  test_plan:
    cases:
    - name: margin_applied
      expectations:
      - path: /braceOffsets/margin
        op: '>='
        value: 0.5
  trace:
  - docs/braces-brackets
  smufl_inputs: []

- id: RULE.MultiVoice.stem_directions_up_down
  title: Stem directions in multi-voice contexts (up/down)
  agent: SpacingAgent
  intent: notation
  priority: 130
  depends_on: []
  inputs:
  - voices
  - notePositions
  parameters:
    default_voice0_up: true
  procedure: Assign stem directions (voice 0 up, voice 1 down); adjust for extremes.
  exceptions: []
  outputs:
  - stemDirections
  side_effects: []
  test_plan:
    cases:
    - name: default_directions
      expectations:
      - path: /stemDirections/0
        op: ==
        value: 1.0
  trace:
  - docs/multi-voice
  smufl_inputs:
  - noteheadBlack.bbox

- id: RULE.MultiMeasureRests.layout_policy
  title: Multi-measure rests layout policy
  agent: PaginationAgent
  intent: layout
  priority: 810
  depends_on: []
  inputs:
  - measureCount
  parameters:
    min_width_sp: 2.0
  procedure: Set multi-measure rest glyph width based on count; enforce minimum width.
  exceptions: []
  outputs:
  - widthSP
  side_effects: []
  test_plan:
    cases:
    - name: width_minimum
      expectations:
      - path: /widthSP
        op: '>='
        value: 2.0
  trace:
  - docs/multi-measure-rests
  smufl_inputs:
  - staffLine.thickness

- id: RULE.Tuplet.beaming_and_bracket_placement
  title: Tuplet beaming and bracket placement
  agent: BeamingAgent
  intent: notation
  priority: 222
  depends_on:
  - RULE.Beaming.subdivision_preference
  inputs:
  - tupletRatio
  - noteValues
  parameters:
    show_bracket_outside_beam: true
  procedure: Determine beaming within tuplet; place bracket and number outside beam
    when present.
  exceptions: []
  outputs:
  - bracketPosition
  side_effects: []
  test_plan:
    cases:
    - name: bracket_visible
      expectations:
      - path: /bracketPosition/y
        op: '>='
        value: 0.0
  trace:
  - docs/tuplets
  smufl_inputs:
  - beam.thickness

- id: RULE.Grace.clusters_width_policy
  title: Grace clusters width and spacing policy
  agent: SpacingAgent
  intent: spacing
  priority: 140
  depends_on: []
  inputs:
  - graceNotes
  parameters:
    scale_width_factor: 0.7
  procedure: Scale nominal spacing widths for grace clusters by factor; enforce minimums.
  exceptions: []
  outputs:
  - widthScale
  side_effects: []
  test_plan:
    cases:
    - name: scaled_width
      expectations:
      - path: /widthScale
        op: ==
        value: 0.7
  trace:
  - docs/grace-notes
  smufl_inputs:
  - noteheadBlack.advance

- id: RULE.CrossStaff.beaming_policy
  title: Cross-staff beaming policy
  agent: BeamingAgent
  intent: placement
  priority: 223
  depends_on: []
  inputs:
  - staffAssignments
  - notePositions
  parameters:
    prefer_primary_staff: true
  procedure: When notes are split across staves, place beam on primary staff with
    angled stems unless overridden.
  exceptions: []
  outputs:
  - beamStaff
  side_effects: []
  test_plan:
    cases:
    - name: primary_staff
      expectations:
      - path: /beamStaff
        op: ==
        value: 1.0
  trace:
  - docs/cross-staff
  smufl_inputs:
  - beam.thickness

- id: RULE.Ottava.placement_policy
  title: Ottava line placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 630
  depends_on: []
  inputs:
  - ottavaType
  - staffBaseline
  parameters:
    min_distance_sp: 0.8
  procedure: Place ottava line above/below staff depending on type with minimum distance.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: offset_minimum
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 0.8
  trace:
  - docs/ottava
  smufl_inputs: []

- id: RULE.RepeatVolta.layout_policy
  title: Repeat/Volta bracket layout policy
  agent: PaginationAgent
  intent: layout
  priority: 820
  depends_on: []
  inputs:
  - bars
  - voltaNumbers
  parameters:
    min_height_sp: 1.0
  procedure: Place volta brackets spanning bar range with minimum height and room for
    numbers.
  exceptions: []
  outputs:
  - heightSP
  side_effects: []
  test_plan:
    cases:
    - name: minimum_height
      expectations:
      - path: /heightSP
        op: '>='
        value: 1.0
  trace:
  - docs/repeats
  smufl_inputs: []

- id: RULE.RehearsalMarks.placement_policy
  title: Rehearsal mark placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 640
  depends_on: []
  inputs:
  - markBBox
  - systemTop
  parameters:
    top_margin_sp: 1.0
  procedure: Place rehearsal marks above system with top margin.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: top_margin
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 1.0
  trace:
  - docs/rehearsal-marks
  smufl_inputs: []

- id: RULE.TempoMarks.placement_policy
  title: Tempo mark placement policy
  agent: VerticalStackAgent
  intent: placement
  priority: 641
  depends_on: []
  inputs:
  - tempoTextBBox
  - systemTop
  parameters:
    top_margin_sp: 0.8
  procedure: Place tempo text above system with margin and avoid collisions.
  exceptions: []
  outputs:
  - yOffsetSP
  side_effects: []
  test_plan:
    cases:
    - name: top_margin
      expectations:
      - path: /yOffsetSP
        op: '>='
        value: 0.8
  trace:
  - docs/tempo
  smufl_inputs: []

- id: RULE.Accidental.key_signature_positions_by_clef
  title: Key signature accidental staff positions by clef and mode
  agent: AccidentalAgent
  intent: placement
  priority: 405
  depends_on: []
  inputs:
  - clef
  - fifths
  parameters:
    treble.sharps: [8,5,9,6,3,7,4]
    treble.flats: [4,7,3,6,2,5,1]
    bass.sharps: [3,6,2,5,1,4,0]
    bass.flats: [6,3,7,4,1,5,2]
  procedure: Choose sequence by clef and sign of `fifths`; return first |fifths| entries.
  exceptions: []
  outputs:
  - positions
  side_effects: []
  test_plan:
    cases:
    - name: treble_three_sharps
      expectations:
      - path: /positions/0
        op: ==
        value: 8.0
      - path: /positions/1
        op: ==
        value: 5.0
      - path: /positions/2
        op: ==
        value: 9.0
  trace:
  - docs/key-signatures
  smufl_inputs:
  - accidentalSharp.bbox
- id: RULE.Ledger.shorten_near_accidental
  title: Ledger line shortening when accidental adjacent
  agent: LedgerAgent
  intent: shape
  priority: 500
  depends_on: []
  inputs:
  - standardLengthSP
  - accidentalProximitySP
  - shortenBySP
  parameters:
    shorten_by: 0.4 sp
  procedure: If accidental overlap margin breached, shorten ledger on that side by
    parameter.
  exceptions: []
  outputs:
  - adjustedLengthSP
  side_effects: []
  test_plan:
    cases:
    - name: High note with sharp
      expectations:
      - path: /adjustedLengthSP
        op: ==
        value: -0.4
        tolerance: 0.0
  trace:
  - docs/ledger
  - engraving-details/ledger-shortening
  smufl_inputs:
  - ledgerLine.bbox
  - accidentalSharp.bbox
- id: RULE.Vertical.min_dist_padding_and_stretch
  title: Staff and object vertical paddings within system
  agent: VerticalStackAgent
  intent: layout
  priority: 600
  depends_on: []
  inputs:
  - VAG
  - objectBBoxes
  - minDistances
  parameters:
    min_staff_gap: 1.5 sp
    min_text_above_staff: 0.7 sp
    stretch_weight: '1.0'
  procedure: Enforce minimums; distribute remaining vertical space; resolve collisions
    by pushing lower-priority groups.
  exceptions: []
  outputs:
  - staffPositions
  - objectOffsets
  side_effects: []
  test_plan:
    cases:
    - name: Lyrics+dynamics two staves
      expectations:
      - path: /minStaffGap
        op: '>='
        value: 1.5
        tolerance: 0.05
  trace:
  - docs/vertical-spacing
  - internals/VerticalAxisGroup
  smufl_inputs:
  - staffLine.thickness
- id: RULE.Dynamics.align_with_noteheads_and_stems
  title: Align dynamics to local musical anchors
  agent: DynamicsTextAgent
  intent: placement
  priority: 700
  depends_on: []
  inputs:
  - noteColumns
  - dynamicBBox
  - baseline
  parameters:
    y_offset_preference: below
    x_anchor_bias: columnCenter
  procedure: Snap dynamic to nearest note column; bias below staff; apply kerning
    with hairpins/lyrics.
  exceptions: []
  outputs:
  - dynamicPosition
  side_effects: []
  test_plan:
    cases:
    - name: mp under beamed group
      expectations:
      - path: /dynamicPosition/y
        op: <=
        value: 0.0
  trace:
  - docs/dynamics-alignment
  smufl_inputs:
  - dynamicPiano.baseline
  - dynamicForte.baseline
- id: RULE.Pagination.castoff_fill_vs_overfull_penalties
  title: System breaking to avoid overfull/underfull pages
  agent: PaginationAgent
  intent: pagination
  priority: 800
  depends_on:
  - RULE.Spacing.keep_inside_system_constraints
  inputs:
  - systemWidths
  - breakOpportunities
  - pageSize
  parameters:
    overfull_penalty: '10'
    underfull_penalty: '2'
    widow_orphan_penalty: '3'
  procedure: Choose breaks minimizing total penalties; no overfull; prefer balanced
    pages.
  exceptions: []
  outputs:
  - systemBreaks
  side_effects: []
  test_plan:
    cases:
    - name: Two-page balance
      expectations:
      - path: /overfull
        op: ==
        value: 0.0
  trace:
  - docs/pagination
  smufl_inputs: []
- id: RULE.OpticalSize.stroke_and_spacing_scalars
  title: Adjust line weights and spacing with staff size
  agent: OpticalSizingAgent
  intent: optical
  priority: 900
  depends_on: []
  inputs:
  - staffSizePT
  - baseLineThickness
  - fontMetrics
  parameters:
    stroke_scalar: f(size)
    spacing_scalar: f(size)
  procedure: Compute scalars; apply to stems, staff lines, slurs, spacing thresholds.
  exceptions: []
  outputs:
  - strokeScalar
  - spacingScalar
  side_effects: []
  test_plan:
    cases:
    - name: 15pt vs 20pt vs 26pt
      expectations:
      - path: /strokeScalar
        op: approx
        value: 1.0
        tolerance: 0.3
  trace:
  - docs/optical-sizing
  smufl_inputs:
  - staffLine.thickness
  - noteheadBlack.stroke
