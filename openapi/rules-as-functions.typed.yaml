openapi: 3.1.0
info:
  title: "Engraving Rules (Functions) \u2014 Typed"
  version: 0.2.0
  description: 'Typed variant for first-class code generation in Swift 6 (and others).

    '
servers: []
components:
  schemas:
    StaffSpace:
      type: number
      description: Distance in staff spaces (sp)
    BBox:
      type: object
      properties:
        x:
          type: number
        y:
          type: number
        w:
          type: number
        h:
          type: number
      required:
      - x
      - y
      - w
      - h
    SpacingDurationBaseInput:
      type: object
      properties:
        durations:
          type: array
          items:
            type: string
            enum:
            - w
            - h
            - q
            - e
            - s
            - t
            - x
        stems:
          type: array
          items:
            type: string
            enum:
            - up
            - down
        preItems:
          type: array
          items:
            type: string
            enum:
            - accidental
            - none
        postItems:
          type: array
          items:
            type: string
            enum:
            - stacc
            - accent
            - none
        noteheadWidths:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        minColumnGap:
          $ref: '#/components/schemas/StaffSpace'
        accidentalPadding:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - durations
      - noteheadWidths
    SpacingDurationBaseOutput:
      type: object
      properties:
        columnPositions:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        columnMinWidths:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        gaps:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        leadIn:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
      required:
      - columnPositions
    BeamingKneeInput:
      type: object
      properties:
        verticalGapSP:
          $ref: '#/components/schemas/StaffSpace'
        beamThicknessSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - verticalGapSP
      - beamThicknessSP
    BeamingKneeOutput:
      type: object
      properties:
        kneed:
          type: boolean
        thresholdUsedSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - kneed
    AccidentalLeadInInput:
      type: object
      properties:
        accidentalBBox:
          $ref: '#/components/schemas/BBox'
        columnLeft:
          type: number
        noteheadWidthSP:
          $ref: '#/components/schemas/StaffSpace'
        paddingSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - accidentalBBox
      - columnLeft
      - noteheadWidthSP
      - paddingSP
    AccidentalLeadInOutput:
      type: object
      properties:
        columnMinWidthSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - columnMinWidthSP
    SlurInput:
      type: object
      properties:
        candidates:
          type: array
          items:
            type: object
            properties:
              controlPoints:
                type: array
                items:
                  type: number
              curvature:
                type: number
              collisions:
                type: integer
            required:
            - controlPoints
      required:
      - candidates
    SlurOutput:
      type: object
      properties:
        chosenIndex:
          type: integer
        minClearanceSP:
          $ref: '#/components/schemas/StaffSpace'
        score:
          type: number
      required:
      - chosenIndex
    RuleInput:
      type: object
      additionalProperties: false
      properties: {}
    RuleOutput:
      type: object
      additionalProperties: false
      properties: {}
    BeamSegment:
      type: object
      properties:
        x1:
          type: number
        y1:
          type: number
        x2:
          type: number
        y2:
          type: number
      required:
      - x1
      - y1
      - x2
      - y2
    BeamGeometryInput:
      type: object
      properties:
        notePositionsSP:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        stemDirections:
          type: array
          items:
            type: string
            enum:
            - up
            - down
        beamThicknessSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - notePositionsSP
      - stemDirections
      - beamThicknessSP
    BeamGeometryOutput:
      type: object
      properties:
        slopeSPPerSpace:
          type: number
        segments:
          type: array
          items:
            $ref: '#/components/schemas/BeamSegment'
      required:
      - slopeSPPerSpace
      - segments
    RestSplitInput:
      type: object
      properties:
        sequence:
          type: array
          items:
            type: string
            enum:
            - note
            - rest
      required:
      - sequence
    RestSplitOutput:
      type: object
      properties:
        groups:
          type: array
          items:
            type: array
            items:
              type: integer
        beamBreaks:
          type: array
          items:
            type: integer
      required:
      - groups
    Pitch:
      type: object
      properties:
        step:
          type: string
          enum:
          - C
          - D
          - E
          - F
          - G
          - A
          - B
        alter:
          type: integer
        octave:
          type: integer
      required:
      - step
      - alter
      - octave
    AccidentalCautionaryInput:
      type: object
      properties:
        previousSpelling:
          $ref: '#/components/schemas/Pitch'
        currentSpelling:
          $ref: '#/components/schemas/Pitch'
      required:
      - previousSpelling
      - currentSpelling
    AccidentalCautionaryOutput:
      type: object
      properties:
        showCautionary:
          type: boolean
        parenthesized:
          type: boolean
      required:
      - showCautionary
    AccidentalMicrotonalInput:
      type: object
      properties:
        pitchAlterCents:
          type: number
        baseSpacingSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - pitchAlterCents
    AccidentalMicrotonalOutput:
      type: object
      properties:
        chosenGlyph:
          type: string
        paddingSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - chosenGlyph
    CourtesyKeyInput:
      type: object
      properties:
        upcomingKey:
          type: object
          properties:
            fifths:
              type: integer
          required:
          - fifths
        atSystemEnd:
          type: boolean
      required:
      - upcomingKey
      - atSystemEnd
    CourtesyKeyOutput:
      type: object
      properties:
        showCourtesy:
          type: boolean
      required:
      - showCourtesy
    CourtesyTimeInput:
      type: object
      properties:
        upcomingTimeSig:
          type: object
          properties:
            beatsPerBar:
              type: integer
            beatUnit:
              type: integer
          required:
          - beatsPerBar
          - beatUnit
        atSystemEnd:
          type: boolean
      required:
      - upcomingTimeSig
      - atSystemEnd
    CourtesyTimeOutput:
      type: object
      properties:
        showCourtesy:
          type: boolean
      required:
      - showCourtesy
    TieCurvatureInput:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/BBox'
        end:
          $ref: '#/components/schemas/BBox'
        nearbyGrobs:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
      required:
      - start
      - end
    TieCurvatureOutput:
      type: object
      properties:
        minClearanceSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - minClearanceSP
    LyricsAlignInput:
      type: object
      properties:
        lyricBBox:
          $ref: '#/components/schemas/BBox'
        staffBaseline:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - lyricBBox
      - staffBaseline
    LyricsAlignOutput:
      type: object
      properties:
        yOffsetSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - yOffsetSP
    KeepInsideInput:
      type: object
      properties:
        lineWidth:
          type: number
        columns:
          type: array
          items:
            type: number
      required:
      - lineWidth
      - columns
    KeepInsideOutput:
      type: object
      properties:
        systemBreaks:
          type: array
          items:
            type: integer
        columnPositions:
          type: array
          items:
            type: number
        overfull:
          type: number
      required:
      - columnPositions
    CompoundBeamingInput:
      type: object
      properties:
        timeSignature:
          type: object
          properties:
            beatsPerBar:
              type: integer
            beatUnit:
              type: integer
          required:
          - beatsPerBar
          - beatUnit
        noteValues:
          type: array
          items:
            type: string
      required:
      - timeSignature
    CompoundBeamingOutput:
      type: object
      properties:
        beamBreaks:
          type: array
          items:
            type: integer
        groups:
          type: array
          items:
            type: array
            items:
              type: integer
      required:
      - beamBreaks
    CollisionLatticeInput:
      type: object
      properties:
        grobTypes:
          type: array
          items:
            type: string
        proximities:
          type: array
          items:
            type: number
      required:
      - grobTypes
    CollisionLatticeOutput:
      type: object
      additionalProperties:
        type: object
        properties:
          x:
            type: number
          y:
            type: number
    LedgerShortenInput:
      type: object
      properties:
        standardLengthSP:
          type: number
        accidentalProximitySP:
          type: number
        shortenBySP:
          type: number
      required:
      - standardLengthSP
      - accidentalProximitySP
    LedgerShortenOutput:
      type: object
      properties:
        adjustedLengthSP:
          type: number
      required:
      - adjustedLengthSP
    VerticalStackInput:
      type: object
      properties:
        objectBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        minDistances:
          type: array
          items:
            type: number
      required:
      - objectBBoxes
    VerticalStackOutput:
      type: object
      properties:
        staffPositions:
          type: array
          items:
            type: number
        objectOffsets:
          type: array
          items:
            type: number
    DynamicsAlignInput:
      type: object
      properties:
        noteColumns:
          type: array
          items:
            type: number
        dynamicBBox:
          $ref: '#/components/schemas/BBox'
        baseline:
          type: number
      required:
      - dynamicBBox
    DynamicsAlignOutput:
      type: object
      properties:
        dynamicPosition:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
      required:
      - dynamicPosition
    CastoffInput:
      type: object
      properties:
        systemWidths:
          type: array
          items:
            type: number
        breakOpportunities:
          type: array
          items:
            type: integer
        pageSize:
          type: string
      required:
      - systemWidths
    CastoffOutput:
      type: object
      properties:
        systemBreaks:
          type: array
          items:
            type: integer
        overfull:
          type: number
    OpticalInput:
      type: object
      properties:
        staffSizePT:
          type: number
        baseLineThickness:
          type: number
      required:
      - staffSizePT
    OpticalOutput:
      type: object
      properties:
        strokeScalar:
          type: number
        spacingScalar:
          type: number
      required:
      - strokeScalar
      - spacingScalar
    OrnamentPlacementInput:
      type: object
      properties:
        ornamentBBox:
          $ref: '#/components/schemas/BBox'
        nearbyGrobs:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
      required:
      - ornamentBBox
    OrnamentPlacementOutput:
      type: object
      properties:
        position:
          type: object
          properties:
            y:
              type: number
      required:
      - position
    BracesLayoutInput:
      type: object
      properties:
        staves:
          type: array
          items:
            type: integer
        grouping:
          type: array
          items:
            type: string
        braceMarginSP:
          type: number
      required:
      - staves
    BracesLayoutOutput:
      type: object
      properties:
        braceOffsets:
          type: object
          additionalProperties:
            type: number
      required:
      - braceOffsets
    MultiVoiceStemsInput:
      type: object
      properties:
        voices:
          type: array
          items:
            type: integer
        notePositions:
          type: array
          items:
            type: number
      required:
      - voices
    MultiVoiceStemsOutput:
      type: object
      properties:
        stemDirections:
          type: array
          items:
            type: integer
      required:
      - stemDirections
    MMRestLayoutInput:
      type: object
      properties:
        measureCount:
          type: integer
      required:
      - measureCount
    MMRestLayoutOutput:
      type: object
      properties:
        widthSP:
          type: number
      required:
      - widthSP
    TupletBeamingInput:
      type: object
      properties:
        tupletRatio:
          type: string
        noteValues:
          type: array
          items:
            type: string
      required:
      - tupletRatio
    TupletBeamingOutput:
      type: object
      properties:
        bracketPosition:
          type: object
          properties:
            y:
              type: number
    GraceWidthInput:
      type: object
      properties:
        graceNotes:
          type: array
          items:
            type: string
      required:
      - graceNotes
    GraceWidthOutput:
      type: object
      properties:
        widthScale:
          type: number
      required:
      - widthScale
    CrossStaffBeamingInput:
      type: object
      properties:
        staffAssignments:
          type: array
          items:
            type: integer
        notePositions:
          type: array
          items:
            type: number
      required:
      - staffAssignments
    CrossStaffBeamingOutput:
      type: object
      properties:
        beamStaff:
          type: integer
      required:
      - beamStaff
    OttavaPlacementInput:
      type: object
      properties:
        ottavaType:
          type: string
        staffBaseline:
          type: number
      required:
      - ottavaType
      - staffBaseline
    OttavaPlacementOutput:
      type: object
      properties:
        yOffsetSP:
          type: number
      required:
      - yOffsetSP
    VoltaLayoutInput:
      type: object
      properties:
        bars:
          type: array
          items:
            type: integer
        voltaNumbers:
          type: array
          items:
            type: integer
        minHeightSP:
          type: number
      required:
      - bars
    VoltaLayoutOutput:
      type: object
      properties:
        heightSP:
          type: number
      required:
      - heightSP
    RehearsalPlacementInput:
      type: object
      properties:
        markBBox:
          $ref: '#/components/schemas/BBox'
        systemTop:
          type: number
        topMarginSP:
          type: number
      required:
      - markBBox
    RehearsalPlacementOutput:
      type: object
      properties:
        yOffsetSP:
          type: number
      required:
      - yOffsetSP
    TempoPlacementInput:
      type: object
      properties:
        tempoTextBBox:
          $ref: '#/components/schemas/BBox'
        systemTop:
          type: number
        topMarginSP:
          type: number
      required:
      - tempoTextBBox
    TempoPlacementOutput:
      type: object
      properties:
        yOffsetSP:
          type: number
      required:
      - yOffsetSP
    BeamingSubdivisionInput:
      type: object
      properties:
        timeSignature:
          type: object
          properties:
            beatsPerBar:
              type: integer
            beatUnit:
              type: integer
          required:
          - beatsPerBar
          - beatUnit
        noteValues:
          type: array
          items:
            type: string
      required:
      - timeSignature
    BeamingSubdivisionOutput:
      type: object
      properties:
        beamBreaks:
          type: array
          items:
            type: integer
      required:
      - beamBreaks
    FlagSuppressionInput:
      type: object
      properties:
        isBeamedGroup:
          type: boolean
      required:
      - isBeamedGroup
    FlagSuppressionOutput:
      type: object
      properties:
        drawFlags:
          type: boolean
      required:
      - drawFlags
    ClefPlacementInput:
      type: object
      properties:
        clefType:
          type: string
          enum:
          - treble
          - bass
          - alto
          - tenor
        staffSizePT:
          type: number
        leftPaddingSP:
          type: number
      required:
      - clefType
      - staffSizePT
    ClefPlacementOutput:
      type: object
      properties:
        xOffsetSP:
          type: number
      required:
      - xOffsetSP
    KeySigPositionsInput:
      type: object
      properties:
        clef:
          type: string
          enum:
          - treble
          - bass
        fifths:
          type: integer
      required:
      - clef
      - fifths
    KeySigPositionsOutput:
      type: object
      properties:
        positions:
          type: array
          items:
            type: number
      required:
      - positions
    BeamingSlopeClearanceInput:
      type: object
      properties:
        notePositionsSP:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
        stemDirections:
          type: array
          items:
            type: string
            enum:
            - up
            - down
        beamThicknessSP:
          $ref: '#/components/schemas/StaffSpace'
        nearbyGrobs:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
      required:
      - notePositionsSP
      - stemDirections
      - beamThicknessSP
    BeamingSlopeClearanceOutput:
      type: object
      properties:
        slopeSPPerSpaceAdjusted:
          type: number
        minClearanceSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - slopeSPPerSpaceAdjusted
    NoteSpacingOpticalWeightsInput:
      type: object
      properties:
        stemDirections:
          type: array
          items:
            type: string
            enum:
            - up
            - down
        beatStrengths:
          type: array
          items:
            type: number
    NoteSpacingOpticalWeightsOutput:
      type: object
      properties:
        weights:
          type: array
          items:
            type: number
      required:
      - weights
    LyricsBaselineVarianceInput:
      type: object
      properties:
        lyricBBox:
          $ref: '#/components/schemas/BBox'
        staffBaseline:
          $ref: '#/components/schemas/StaffSpace'
        varianceSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - lyricBBox
      - staffBaseline
    LyricsBaselineVarianceOutput:
      type: object
      properties:
        yOffsetSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - yOffsetSP
    BeamingCrossVoiceSlopeInput:
      type: object
      properties:
        voiceNotePositionsSP:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/StaffSpace'
        voiceStemDirections:
          type: array
          items:
            type: array
            items:
              type: string
              enum:
              - up
              - down
        beamThicknessSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - voiceNotePositionsSP
      - voiceStemDirections
      - beamThicknessSP
    BeamingCrossVoiceSlopeOutput:
      type: object
      properties:
        slopeSPPerSpaceAdjusted:
          type: number
        balanceScore:
          type: number
      required:
      - slopeSPPerSpaceAdjusted
    DynamicsStackKerningInput:
      type: object
      properties:
        dynamicBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        hairpinBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        atSystemBreak:
          type: boolean
      required:
      - dynamicBBoxes
    DynamicsStackKerningOutput:
      type: object
      properties:
        dynamicPositions:
          type: array
          items:
            type: object
            properties:
              x:
                $ref: '#/components/schemas/StaffSpace'
              y:
                $ref: '#/components/schemas/StaffSpace'
            required:
            - x
            - y
      required:
      - dynamicPositions
    LyricsHyphenMelismaInput:
      type: object
      properties:
        syllableBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        hyphenBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        melismaLineBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        staffBaseline:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - syllableBBoxes
      - staffBaseline
    LyricsHyphenMelismaOutput:
      type: object
      properties:
        lyricOffsets:
          type: array
          items:
            type: number
        baselineYOffsetSP:
          $ref: '#/components/schemas/StaffSpace'
      required:
      - lyricOffsets
    BeamCollisionInput:
      type: object
      properties:
        beamSegments:
          type: array
          items:
            $ref: '#/components/schemas/BeamSegment'
        nearbyGrobs:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
      required:
      - beamSegments
      - nearbyGrobs
    BeamCollisionOutput:
      type: object
      properties:
        offsets:
          type: array
          items:
            $ref: '#/components/schemas/StaffSpace'
      required:
      - offsets
    RestCollisionInput:
      type: object
      properties:
        restBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
        noteColumnBBoxes:
          type: array
          items:
            $ref: '#/components/schemas/BBox'
      required:
      - restBBoxes
      - noteColumnBBoxes
    RestCollisionOutput:
      type: object
      properties:
        restOffsets:
          type: array
          items:
            type: object
            properties:
              x:
                $ref: '#/components/schemas/StaffSpace'
              y:
                $ref: '#/components/schemas/StaffSpace'
            required:
            - x
            - y
      required:
      - restOffsets
    DynamicKerningInput:
      type: object
      properties:
        dynamicBBox:
          $ref: '#/components/schemas/BBox'
        hairpinBBox:
          $ref: '#/components/schemas/BBox'
        lyricBBox:
          $ref: '#/components/schemas/BBox'
      required:
      - dynamicBBox
    DynamicKerningOutput:
      type: object
      properties:
        dynamicPosition:
          type: object
          properties:
            x:
              $ref: '#/components/schemas/StaffSpace'
            y:
              $ref: '#/components/schemas/StaffSpace'
          required:
          - x
          - y
      required:
      - dynamicPosition
paths:
  /apply/spacing/duration-base-with-optical-corrections:
    post:
      operationId: RULE.Spacing.duration_base_with_optical_corrections
      summary: Duration-proportional spacing with optical adjustments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacingDurationBaseInput'
      responses:
        '200':
          description: Duration spacing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacingDurationBaseOutput'
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 100
      x-smufl:
      - noteheadBlack.advance
      - noteheadWhole.advance
  /apply/beaming/auto-knee-threshold:
    post:
      operationId: RULE.Beaming.auto_knee_threshold
      summary: Insert kneed beam on excessive vertical gap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamingKneeInput'
      responses:
        '200':
          description: Kneed beam decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamingKneeOutput'
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 200
      x-smufl:
      - beam.thickness
  /apply/accidental/leading-padding-and-column-inflation:
    post:
      operationId: RULE.Accidental.leading_padding_and_column_inflation
      summary: Accidental lead-in spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccidentalLeadInInput'
      responses:
        '200':
          description: Accidental lead-in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccidentalLeadInOutput'
      x-rule:
        agent: AccidentalAgent
        intent: spacing
        priority: 400
      x-smufl:
      - accidentalSharp.bbox
      - accidentalFlat.bbox
      - accidentalNatural.bbox
  /apply/slur/curvature-choice-with-collision-penalty:
    post:
      operationId: RULE.Slur.curvature_choice_with_collision_penalty
      summary: Slur curvature selected by minimal collision/penalty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlurInput'
      responses:
        '200':
          description: Slur selection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlurOutput'
      x-rule:
        agent: TieSlurAgent
        intent: placement
        priority: 300
      x-smufl:
      - noteheadBlack.bbox
      - accidentalSharp.bbox
  /apply/spacing/Spacing-duration_base_with_optical_corrections:
    post:
      operationId: RULE.Spacing.duration_base_with_optical_corrections
      summary: Duration-proportional spacing with optical adjustments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacingDurationBaseInput'
      responses:
        '200':
          description: Duration spacing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacingDurationBaseOutput'
  /apply/spacing/Spacing-keep_inside_system_constraints:
    post:
      operationId: RULE.Spacing.keep_inside_system_constraints
      summary: Keep-inside-line/system packing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeepInsideInput'
      responses:
        '200':
          description: Keep-inside result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepInsideOutput'
  /apply/beaming/Beaming-auto_knee_threshold:
    post:
      operationId: RULE.Beaming.auto_knee_threshold
      summary: Insert kneed beam on excessive vertical gap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamingKneeInput'
      responses:
        '200':
          description: Kneed beam decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamingKneeOutput'
  /apply/beaming/Beaming-compound_meter_grouping:
    post:
      operationId: RULE.Beaming.compound_meter_grouping
      summary: Group beams by dotted-beat in compound meters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompoundBeamingInput'
      responses:
        '200':
          description: Compound beaming result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompoundBeamingOutput'
  /apply/beaming/Beaming-geometry_slope_and_segments:
    post:
      operationId: RULE.Beaming.geometry_slope_and_segments
      summary: Beam slope and segment geometry selection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamGeometryInput'
      responses:
        '200':
          description: Beam slope and segments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamGeometryOutput'
  /apply/beaming/Beaming-rests_split_groups:
    post:
      operationId: RULE.Beaming.rests_split_groups
      summary: Split beamed groups at rests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestSplitInput'
      responses:
        '200':
          description: Groups split at rests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestSplitOutput'
  /apply/beaming/Beaming-subdivision_preference:
    post:
      operationId: RULE.Beaming.subdivision_preference
      summary: Subdivide beams according to meter grouping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamingSubdivisionInput'
      responses:
        '200':
          description: Subdivision beaming
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamingSubdivisionOutput'
  /apply/beaming/Beaming-suppress_flags_when_beamed:
    post:
      operationId: RULE.Beaming.suppress_flags_when_beamed
      summary: Suppress individual flags on notes within beamed groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagSuppressionInput'
      responses:
        '200':
          description: Flag suppression
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagSuppressionOutput'
  /apply/tieslur/Slur-curvature_choice_with_collision_penalty:
    post:
      operationId: RULE.Slur.curvature_choice_with_collision_penalty
      summary: Slur curvature selected by minimal collision/penalty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlurInput'
      responses:
        '200':
          description: Slur selection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlurOutput'
  /apply/collision/Collision-priority_lattice:
    post:
      operationId: RULE.Collision.priority_lattice
      summary: Collision resolution priority ordering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollisionLatticeInput'
      responses:
        '200':
          description: Collision offsets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollisionLatticeOutput'
  /apply/accidental/Accidental-leading_padding_and_column_inflation:
    post:
      operationId: RULE.Accidental.leading_padding_and_column_inflation
      summary: Accidental lead-in spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccidentalLeadInInput'
      responses:
        '200':
          description: Accidental lead-in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccidentalLeadInOutput'
  /apply/accidental/Accidental-cautionary_parenthesized_policy:
    post:
      operationId: RULE.Accidental.cautionary_parenthesized_policy
      summary: "Cautionary (courtesy) accidentals \u2014 parenthesized policy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccidentalCautionaryInput'
      responses:
        '200':
          description: Cautionary accidentals policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccidentalCautionaryOutput'
  /apply/accidental/Accidental-microtonal_glyph_selection_and_spacing:
    post:
      operationId: RULE.Accidental.microtonal_glyph_selection_and_spacing
      summary: Microtonal accidental glyph selection and spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccidentalMicrotonalInput'
      responses:
        '200':
          description: Microtonal glyph and spacing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccidentalMicrotonalOutput'
  /apply/tieslur/Tie-curvature_selection_with_clearance:
    post:
      operationId: RULE.Tie.curvature_selection_with_clearance
      summary: Tie curvature selected with clearance from noteheads
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TieCurvatureInput'
      responses:
        '200':
          description: Tie curvature clearance report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TieCurvatureOutput'
  /apply/accidental/Clef-mid_system_placement:
    post:
      operationId: RULE.Clef.mid_system_placement
      summary: Mid-system clef placement and spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClefPlacementInput'
      responses:
        '200':
          description: Clef placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClefPlacementOutput'
  /apply/accidental/KeySignature-courtesy_at_line_breaks:
    post:
      operationId: RULE.KeySignature.courtesy_at_line_breaks
      summary: Courtesy key signature at system breaks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourtesyKeyInput'
      responses:
        '200':
          description: Courtesy key decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourtesyKeyOutput'
  /apply/accidental/TimeSignature-courtesy_at_line_breaks:
    post:
      operationId: RULE.TimeSignature.courtesy_at_line_breaks
      summary: Courtesy time signature at system breaks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourtesyTimeInput'
      responses:
        '200':
          description: Courtesy time decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourtesyTimeOutput'
  /apply/verticalstack/Lyrics-vertical_alignment_with_baselines:
    post:
      operationId: RULE.Lyrics.vertical_alignment_with_baselines
      summary: Lyrics vertical alignment relative to staff baselines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LyricsAlignInput'
      responses:
        '200':
          description: Lyrics offset result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricsAlignOutput'
  /apply/collision/Ornaments-placement_above_below_with_collision:
    post:
      operationId: RULE.Ornaments.placement_above_below_with_collision
      summary: Ornaments placement above/below with collision avoidance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrnamentPlacementInput'
      responses:
        '200':
          description: Ornament placement result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrnamentPlacementOutput'
  /apply/verticalstack/PartStaff-braces_brackets_layout:
    post:
      operationId: RULE.PartStaff.braces_brackets_layout
      summary: Braces and brackets placement for part/staff groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BracesLayoutInput'
      responses:
        '200':
          description: Braces/brackets layout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BracesLayoutOutput'
  /apply/spacing/MultiVoice-stem_directions_up_down:
    post:
      operationId: RULE.MultiVoice.stem_directions_up_down
      summary: Stem directions in multi-voice contexts (up/down)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiVoiceStemsInput'
      responses:
        '200':
          description: Stem directions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiVoiceStemsOutput'
  /apply/pagination/MultiMeasureRests-layout_policy:
    post:
      operationId: RULE.MultiMeasureRests.layout_policy
      summary: Multi-measure rests layout policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MMRestLayoutInput'
      responses:
        '200':
          description: MM rest layout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MMRestLayoutOutput'
  /apply/beaming/Tuplet-beaming_and_bracket_placement:
    post:
      operationId: RULE.Tuplet.beaming_and_bracket_placement
      summary: Tuplet beaming and bracket placement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TupletBeamingInput'
      responses:
        '200':
          description: Tuplet beaming/bracket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TupletBeamingOutput'
  /apply/spacing/Grace-clusters_width_policy:
    post:
      operationId: RULE.Grace.clusters_width_policy
      summary: Grace clusters width and spacing policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraceWidthInput'
      responses:
        '200':
          description: Grace width policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraceWidthOutput'
  /apply/beaming/CrossStaff-beaming_policy:
    post:
      operationId: RULE.CrossStaff.beaming_policy
      summary: Cross-staff beaming policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossStaffBeamingInput'
      responses:
        '200':
          description: Cross-staff beaming
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrossStaffBeamingOutput'
  /apply/verticalstack/Ottava-placement_policy:
    post:
      operationId: RULE.Ottava.placement_policy
      summary: Ottava line placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OttavaPlacementInput'
      responses:
        '200':
          description: Ottava placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttavaPlacementOutput'
  /apply/pagination/RepeatVolta-layout_policy:
    post:
      operationId: RULE.RepeatVolta.layout_policy
      summary: Repeat/Volta bracket layout policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoltaLayoutInput'
      responses:
        '200':
          description: Volta layout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoltaLayoutOutput'
  /apply/verticalstack/RehearsalMarks-placement_policy:
    post:
      operationId: RULE.RehearsalMarks.placement_policy
      summary: Rehearsal mark placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RehearsalPlacementInput'
      responses:
        '200':
          description: Rehearsal placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RehearsalPlacementOutput'
  /apply/verticalstack/TempoMarks-placement_policy:
    post:
      operationId: RULE.TempoMarks.placement_policy
      summary: Tempo mark placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempoPlacementInput'
      responses:
        '200':
          description: Tempo placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempoPlacementOutput'
  /apply/accidental/Accidental-key_signature_positions_by_clef:
    post:
      operationId: RULE.Accidental.key_signature_positions_by_clef
      summary: Key signature accidental staff positions by clef and mode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeySigPositionsInput'
      responses:
        '200':
          description: Key signature positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySigPositionsOutput'
  /apply/ledger/Ledger-shorten_near_accidental:
    post:
      operationId: RULE.Ledger.shorten_near_accidental
      summary: Ledger line shortening when accidental adjacent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerShortenInput'
      responses:
        '200':
          description: Ledger shorten result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerShortenOutput'
  /apply/verticalstack/Vertical-min_dist_padding_and_stretch:
    post:
      operationId: RULE.Vertical.min_dist_padding_and_stretch
      summary: Staff and object vertical paddings within system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerticalStackInput'
      responses:
        '200':
          description: Vertical layout result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerticalStackOutput'
  /apply/dynamicstext/Dynamics-align_with_noteheads_and_stems:
    post:
      operationId: RULE.Dynamics.align_with_noteheads_and_stems
      summary: Align dynamics to local musical anchors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicsAlignInput'
      responses:
        '200':
          description: Dynamics alignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicsAlignOutput'
  /apply/beaming/Beaming-slope_with_clearance:
    post:
      operationId: RULE.Beaming.slope_with_clearance
      summary: Adjust beam slope to maintain obstacle clearance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamingSlopeClearanceInput'
      responses:
        '200':
          description: Adjusted beam slope with clearance info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamingSlopeClearanceOutput'
  /apply/spacing/NoteSpacing-optical_stem_weight_scalars:
    post:
      operationId: RULE.NoteSpacing.optical_stem_weight_scalars
      summary: Compute optical stem-weight scalars per column
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteSpacingOpticalWeightsInput'
      responses:
        '200':
          description: Optical stem weight scalars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteSpacingOpticalWeightsOutput'
  /apply/beaming/Beaming-cross_voice_mixed_stem_slope_balance:
    post:
      operationId: RULE.Beaming.cross_voice_mixed_stem_slope_balance
      summary: Beaming slope balance across voices with mixed stems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamingCrossVoiceSlopeInput'
      responses:
        '200':
          description: Balanced beam slope and score
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamingCrossVoiceSlopeOutput'
  /apply/dynamicstext/Dynamics-stacked_kerning_with_system_breaks:
    post:
      operationId: RULE.Dynamics.stacked_kerning_with_system_breaks
      summary: Stacked dynamics kerning with system break awareness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicsStackKerningInput'
      responses:
        '200':
          description: Kerning-adjusted dynamic positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicsStackKerningOutput'
  /apply/verticalstack/Lyrics-hyphen_melisma_spacing_interaction:
    post:
      operationId: RULE.Lyrics.hyphen_melisma_spacing_interaction
      summary: Lyrics hyphen and melisma spacing interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LyricsHyphenMelismaInput'
      responses:
        '200':
          description: Lyric offsets and baseline adjustment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricsHyphenMelismaOutput'
  /apply/verticalstack/Lyrics-baseline_adjustment_with_variance:
    post:
      operationId: RULE.Lyrics.baseline_adjustment_with_variance
      summary: Lyrics baseline adjustment with variance tolerance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LyricsBaselineVarianceInput'
      responses:
        '200':
          description: Adjusted lyrics baseline offset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricsBaselineVarianceOutput'
  /apply/collision/BeamCollision-resolve_overlaps:
    post:
      operationId: RULE.BeamCollision.resolve_overlaps
      summary: Resolve beam collisions by minimal offsets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeamCollisionInput'
      responses:
        '200':
          description: Beam collision offsets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeamCollisionOutput'
  /apply/collision/RestCollision-resolve_overlaps:
    post:
      operationId: RULE.RestCollision.resolve_overlaps
      summary: Resolve rest collisions with note columns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestCollisionInput'
      responses:
        '200':
          description: Rest collision offsets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestCollisionOutput'
  /apply/dynamicstext/DynamicAlign-kerning_with_hairpins:
    post:
      operationId: RULE.DynamicAlign.kerning_with_hairpins
      summary: Dynamic text kerning with hairpins and lyrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicKerningInput'
      responses:
        '200':
          description: Kerning offsets for dynamics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicKerningOutput'
  /apply/pagination/Pagination-castoff_fill_vs_overfull_penalties:
    post:
      operationId: RULE.Pagination.castoff_fill_vs_overfull_penalties
      summary: System breaking to avoid overfull/underfull pages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastoffInput'
      responses:
        '200':
          description: Castoff result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CastoffOutput'
  /apply/opticalsizing/OpticalSize-stroke_and_spacing_scalars:
    post:
      operationId: RULE.OpticalSize.stroke_and_spacing_scalars
      summary: Adjust line weights and spacing with staff size
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpticalInput'
      responses:
        '200':
          description: Optical sizing scalars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpticalOutput'
  /apply/collision/Arpeggio-placement_policy:
    post:
      operationId: RULE.Arpeggio.placement_policy
      summary: Arpeggio placement policy (avoid collisions)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleOutput'
  /apply/collision/Fingering-placement_policy:
    post:
      operationId: RULE.Fingering.placement_policy
      summary: Fingering placement near noteheads with collision avoidance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleOutput'
  /apply/verticalstack/Pedal-line_and_text_policy:
    post:
      operationId: RULE.Pedal.line_and_text_policy
      summary: Pedal line and text placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleOutput'
  /apply/verticalstack/TrillSpanner-placement_policy:
    post:
      operationId: RULE.TrillSpanner.placement_policy
      summary: Trill spanner placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleOutput'
  /apply/spacing/NoteSpacing-spacing_policy:
    post:
      operationId: RULE.NoteSpacing.spacing_policy
      summary: Note spacing policy (column gaps and alignment)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeepInsideInput'
      responses:
        '200':
          description: Note spacing columns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepInsideOutput'
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 120
  /apply/verticalstack/DurationLine-placement_policy:
    post:
      operationId: RULE.DurationLine.placement_policy
      summary: Duration line placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OttavaPlacementInput'
      responses:
        '200':
          description: Duration line y-offset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttavaPlacementOutput'
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 635
