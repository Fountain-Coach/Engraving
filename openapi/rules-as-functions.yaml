openapi: 3.1.0
info:
  title: Engraving Rules (Functions)
  version: 0.1.0
  description: Generated from rules/REGISTRY.yaml on 2025-10-06T07:22:37.169222
servers: []
paths:
  /apply/spacing/Spacing-duration_base_with_optical_corrections:
    post:
      operationId: RULE.Spacing.duration_base_with_optical_corrections
      summary: Duration-proportional spacing with optical adjustments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 100
        depends_on: []
        parameters:
          min_column_gap: 0.5 sp
          accidental_leading_padding: 0.25 sp
          articulation_padding: 0.2 sp
          optical_stem_adj_weight: '0.4'
        exceptions:
        - grace_clusters_scale_widths
        trace:
        - docs/horizontal-spacing
        - internals/SpacingSpanner
        test_plan:
          cases:
          - name: Opposing stems add optical gap
            expectations:
            - path: /gaps/1
              op: '>='
              value: 0.7
              tolerance: 0.1
          - name: Sharp causes lead-in
            expectations:
            - path: /leadIn/2
              op: '>='
              value: 0.25
              tolerance: 0.05
          fixtures:
            font: Bravura
            staffSize: 20pt
            paper: A4
  /apply/spacing/Spacing-keep_inside_system_constraints:
    post:
      operationId: RULE.Spacing.keep_inside_system_constraints
      summary: Keep-inside-line/system packing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 110
        depends_on:
        - RULE.Spacing.duration_base_with_optical_corrections
        parameters:
          line_fill_penalty: '1.0'
          overfull_penalty: '10.0'
        exceptions: []
        trace:
        - docs/line-breaking
        test_plan:
          cases:
          - name: Near break threshold
            expectations:
            - path: /overfull
              op: ==
              value: 0.0
  /apply/beaming/Beaming-auto_knee_threshold:
    post:
      operationId: RULE.Beaming.auto_knee_threshold
      summary: Insert kneed beam on excessive vertical gap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 200
        depends_on: []
        parameters:
          knee_gap_threshold: 5.5 sp + beam_thickness
        exceptions:
        - forced_beaming_overrides
        trace:
        - docs/beaming/auto-knee
        - internals/beam-interface
        test_plan:
          cases:
          - name: Large leap triggers knee
            expectations:
            - path: /kneed
              op: ==
              value: 1.0
  /apply/beaming/Beaming-compound_meter_grouping:
    post:
      operationId: RULE.Beaming.compound_meter_grouping
      summary: Group beams by dotted-beat in compound meters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 215
        depends_on:
        - RULE.Beaming.subdivision_preference
        parameters:
          6/8: 3+3 eighths
          9/8: 3+3+3 eighths
          12/8: 3+3+3+3 eighths
        exceptions:
        - forced_beaming_overrides
        - rests_split_groups
        trace:
        - docs/beaming/compound
        test_plan:
          cases:
          - name: 6/8 two dotted beats
            expectations:
            - path: /beamBreaks/count
              op: ==
              value: 1.0
          - name: 9/8 three dotted beats
            expectations:
            - path: /beamBreaks/count
              op: ==
              value: 2.0
  /apply/collision/BeamCollision-resolve_overlaps:
    post:
      operationId: RULE.BeamCollision.resolve_overlaps
      summary: Resolve beam collisions by minimal offsets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: collision
        priority: 355
        depends_on:
        - RULE.Beaming.geometry_slope_and_segments
        parameters:
          min_clearance_sp: 0.25
        exceptions: []
        trace:
        - docs/beaming/collision
        test_plan:
          cases:
          - name: minimal_offsets
            expectations:
            - path: /offsets/count
              op: '>='
              value: 0.0
  /apply/collision/RestCollision-resolve_overlaps:
    post:
      operationId: RULE.RestCollision.resolve_overlaps
      summary: Resolve rest collisions with note columns
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: collision
        priority: 356
        depends_on:
        - RULE.Spacing.duration_base_with_optical_corrections
        parameters:
          min_gap_sp: 0.3
        exceptions: []
        trace:
        - docs/collisions/rests
        test_plan:
          cases:
          - name: gaps_kept
            expectations:
            - path: /restOffsets/count
              op: '>='
              value: 0.0
  /apply/dynamicstext/DynamicAlign-kerning_with_hairpins:
    post:
      operationId: RULE.DynamicAlign.kerning_with_hairpins
      summary: Dynamic text kerning with hairpins and lyrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: DynamicsTextAgent
        intent: placement
        priority: 705
        depends_on:
        - RULE.Dynamics.align_with_noteheads_and_stems
        parameters:
          min_kerning_sp: 0.2
          hairpin_clearance_sp: 0.3
          lyrics_baseline_variance_sp: 0.15
        exceptions: []
        trace:
        - docs/dynamics/kerning
        test_plan:
          cases:
          - name: kerning_applied
            expectations:
            - path: /dynamicPosition/x
              op: '>='
              value: 0.0
  /apply/verticalstack/Lyrics-baseline_adjustment_with_variance:
    post:
      operationId: RULE.Lyrics.baseline_adjustment_with_variance
      summary: Lyrics baseline adjustment with variance tolerance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 611
        depends_on:
        - RULE.Lyrics.vertical_alignment_with_baselines
        parameters:
          max_variance_sp: 0.2
          prefer_stable_baseline: true
        exceptions: []
        trace:
        - docs/lyrics/baseline
        test_plan:
          cases:
          - name: within_variance_cap
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.0
  /apply/beaming/Beaming-cross_voice_mixed_stem_slope_balance:
    post:
      operationId: RULE.Beaming.cross_voice_mixed_stem_slope_balance
      summary: Beaming slope balance across voices with mixed stems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 222
        depends_on:
        - RULE.Beaming.geometry_slope_and_segments
        parameters:
          balance_weight: '0.6'
          min_clearance_sp: 0.25
        exceptions:
        - forced_beam_slope
        trace:
        - docs/beaming/cross-voice
        test_plan:
          cases:
          - name: balanced_slope
            expectations:
            - path: /slopeSPPerSpaceAdjusted
              op: <=
              value: 0.5
  /apply/dynamicstext/Dynamics-stacked_kerning_with_system_breaks:
    post:
      operationId: RULE.Dynamics.stacked_kerning_with_system_breaks
      summary: Stacked dynamics kerning with system break awareness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: DynamicsTextAgent
        intent: placement
        priority: 706
        depends_on:
        - RULE.Dynamics.align_with_noteheads_and_stems
        parameters:
          stacked_min_gap_sp: 0.25
          break_margin_sp: 0.3
        exceptions: []
        trace:
        - docs/dynamics/stacking
        test_plan:
          cases:
          - name: stacked_gap_respected
            expectations:
            - path: /dynamicPositions/count
              op: '>='
              value: 1.0
  /apply/verticalstack/Lyrics-hyphen_melisma_spacing_interaction:
    post:
      operationId: RULE.Lyrics.hyphen_melisma_spacing_interaction
      summary: Lyrics hyphen and melisma spacing interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 612
        depends_on:
        - RULE.Lyrics.vertical_alignment_with_baselines
        parameters:
          hyphen_min_gap_sp: 0.3
          melisma_baseline_bias_sp: 0.1
        exceptions: []
        trace:
        - docs/lyrics/hyphens
        test_plan:
          cases:
          - name: hyphen_gap_minimum
            expectations:
            - path: /lyricOffsets/count
              op: '>='
              value: 1.0
  /apply/spacing/NoteSpacing-spacing_policy:
    post:
      operationId: RULE.NoteSpacing.spacing_policy
      summary: Note spacing policy (column gaps and alignment)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 120
        depends_on:
        - RULE.Spacing.duration_base_with_optical_corrections
        parameters:
          optical_stem_weight: 0.4
        exceptions: []
        trace:
        - docs/spacing/note-columns
        test_plan:
          cases:
          - name: gaps_respected
            expectations:
            - path: /columnPositions/0
              op: <=
              value: 0.0
  /apply/verticalstack/DurationLine-placement_policy:
    post:
      operationId: RULE.DurationLine.placement_policy
      summary: Duration line placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 635
        depends_on: []
        parameters:
          min_distance_sp: 0.8
        exceptions: []
        trace:
        - docs/duration-lines
        test_plan:
          cases:
          - name: duration_line_offset
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.8
  /apply/beaming/Beaming-slope_with_clearance:
    post:
      operationId: RULE.Beaming.slope_with_clearance
      summary: Adjust beam slope to maintain obstacle clearance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 221
        depends_on:
        - RULE.Beaming.geometry_slope_and_segments
        parameters:
          min_clearance_sp: 0.25
          slope_penalty_weight: '0.5'
        exceptions:
        - forced_beam_slope
        trace:
        - docs/beaming/slope
        - internals/beam-interface
        test_plan:
          cases:
          - name: maintain_clearance
            expectations:
            - path: /minClearanceSP
              op: '>='
              value: 0.25
              tolerance: 0.05
  /apply/spacing/NoteSpacing-optical_stem_weight_scalars:
    post:
      operationId: RULE.NoteSpacing.optical_stem_weight_scalars
      summary: Compute optical stem-weight scalars per column
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 121
        depends_on:
        - RULE.Spacing.duration_base_with_optical_corrections
        parameters:
          up_weight: '0.4'
          down_weight: '0.4'
          strong_beat_bonus: '0.1'
        exceptions: []
        trace:
        - docs/spacing/optical
        - internals/SpacingSpanner
        test_plan:
          cases:
          - name: weights_present
            expectations:
            - path: /weights/count
              op: '>='
              value: 1.0
  /apply/collision/Arpeggio-placement_policy:
    post:
      operationId: RULE.Arpeggio.placement_policy
      summary: Arpeggio placement policy (avoid collisions)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: placement
        priority: 365
        depends_on: []
        parameters:
          prefer_centered: true
        exceptions: []
        trace:
        - docs/arpeggios
        test_plan:
          cases:
          - name: arpeggio_position
            expectations:
            - path: /position/y
              op: '>='
              value: 0.0
  /apply/collision/Fingering-placement_policy:
    post:
      operationId: RULE.Fingering.placement_policy
      summary: Fingering placement near noteheads with collision avoidance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: placement
        priority: 366
        depends_on: []
        parameters:
          prefer_above: true
        exceptions: []
        trace:
        - docs/fingering
        test_plan:
          cases:
          - name: fingering_position
            expectations:
            - path: /position/y
              op: '>='
              value: 0.0
  /apply/verticalstack/Pedal-line_and_text_policy:
    post:
      operationId: RULE.Pedal.line_and_text_policy
      summary: Pedal line and text placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 645
        depends_on: []
        parameters:
          min_distance_sp: 0.8
        exceptions: []
        trace:
        - docs/pedal
        test_plan:
          cases:
          - name: pedal_offset
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.8
  /apply/verticalstack/TrillSpanner-placement_policy:
    post:
      operationId: RULE.TrillSpanner.placement_policy
      summary: Trill spanner placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 646
        depends_on: []
        parameters:
          min_distance_sp: 0.8
        exceptions: []
        trace:
        - docs/trill
        test_plan:
          cases:
          - name: trill_offset
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.8
  /apply/beaming/Beaming-geometry_slope_and_segments:
    post:
      operationId: RULE.Beaming.geometry_slope_and_segments
      summary: Beam slope and segment geometry selection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 220
        depends_on:
        - RULE.Beaming.subdivision_preference
        parameters:
          max_slope_sp_per_space: 0.5
          prefer_shallow_beams_weight: '0.6'
        exceptions:
        - forced_beam_slope
        trace:
        - docs/beaming/slope
        test_plan:
          cases:
          - name: shallow_preference
            expectations:
            - path: /slopeSPPerSpace
              op: <=
              value: 0.5
  /apply/beaming/Beaming-rests_split_groups:
    post:
      operationId: RULE.Beaming.rests_split_groups
      summary: Split beamed groups at rests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 221
        depends_on:
        - RULE.Beaming.subdivision_preference
        parameters:
          split_on_rests: true
        exceptions: []
        trace:
        - docs/beaming/rests
        test_plan:
          cases:
          - name: rest_splits_group
            expectations:
            - path: /beamBreaks/count
              op: '>='
              value: 1.0
  /apply/beaming/Beaming-subdivision_preference:
    post:
      operationId: RULE.Beaming.subdivision_preference
      summary: Subdivide beams according to meter grouping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 210
        depends_on: []
        parameters:
          4/4: 2+2 eighths
          7/8: 2+2+3 | 3+2+2
        exceptions: []
        trace:
        - docs/beaming/subdivision
        test_plan:
          cases:
          - name: 4/4 standard grouping
            expectations:
            - path: /beamBreaks/count
              op: ==
              value: 2.0
  /apply/beaming/Beaming-suppress_flags_when_beamed:
    post:
      operationId: RULE.Beaming.suppress_flags_when_beamed
      summary: Suppress individual flags on notes within beamed groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: rendering
        priority: 220
        depends_on:
        - RULE.Beaming.subdivision_preference
        parameters: {}
        exceptions: []
        trace:
        - docs/beaming/flags
        test_plan:
          cases:
          - name: beamed_group
            expectations:
            - path: /drawFlags
              op: ==
              value: 0.0
          - name: single_unbeamed_note
            expectations:
            - path: /drawFlags
              op: ==
              value: 1.0
  /apply/tieslur/Slur-curvature_choice_with_collision_penalty:
    post:
      operationId: RULE.Slur.curvature_choice_with_collision_penalty
      summary: Slur curvature selected by minimal collision/penalty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: TieSlurAgent
        intent: placement
        priority: 300
        depends_on: []
        parameters:
          collision_penalty: '1.0'
          excess_curvature_penalty: '0.4'
          endpoint_clearance: 0.25 sp
        exceptions:
        - cross_system_phrase_looser
        trace:
        - docs/slurs
        - internals/slur-grob
        test_plan:
          cases:
          - name: Accidental under slur
            expectations:
            - path: /minClearanceSP
              op: '>='
              value: 0.25
              tolerance: 0.05
  /apply/collision/Collision-priority_lattice:
    post:
      operationId: RULE.Collision.priority_lattice
      summary: Collision resolution priority ordering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: collision
        priority: 350
        depends_on: []
        parameters:
          priority: stem > notehead > accidental > dynamic > lyric
        exceptions:
        - forced_positions
        trace:
        - docs/collisions
        - internals/collision-resolution
        test_plan:
          cases:
          - name: Dynamic vs. lyric
            expectations:
            - path: /offsets/dynamic/y
              op: '>='
              value: 0.2
              tolerance: 0.05
  /apply/accidental/Accidental-leading_padding_and_column_inflation:
    post:
      operationId: RULE.Accidental.leading_padding_and_column_inflation
      summary: Accidental lead-in spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: spacing
        priority: 400
        depends_on:
        - RULE.Spacing.duration_base_with_optical_corrections
        parameters:
          accidental_padding: 0.25 sp
          cluster_stack_gap: 0.2 sp
        exceptions: []
        trace:
        - docs/accidentals
        - internals/spacing
        test_plan:
          cases:
          - name: Single sharp
            expectations:
            - path: /columnMinWidthSP
              op: '>='
              value: 0.25
              tolerance: 0.05
  /apply/accidental/Accidental-cautionary_parenthesized_policy:
    post:
      operationId: RULE.Accidental.cautionary_parenthesized_policy
      summary: "Cautionary (courtesy) accidentals \u2014 parenthesized policy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: notation
        priority: 410
        depends_on: []
        parameters:
          show_cautionary_when_spelling_changes: true
          parenthesis_padding_sp: 0.3
        exceptions:
        - explicit_editor_override
        trace:
        - docs/accidentals/cautionary
        test_plan:
          cases:
          - name: spelling_changes
            expectations:
            - path: /showCautionary
              op: ==
              value: 1.0
  /apply/accidental/Accidental-microtonal_glyph_selection_and_spacing:
    post:
      operationId: RULE.Accidental.microtonal_glyph_selection_and_spacing
      summary: Microtonal accidental glyph selection and spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: notation
        priority: 415
        depends_on: []
        parameters:
          min_padding_sp: 0.25
        exceptions:
        - unsupported_glyph_fallback
        trace:
        - docs/accidentals/microtonal
        test_plan:
          cases:
          - name: enforce_min_padding
            expectations:
            - path: /paddingSP
              op: '>='
              value: 0.25
  /apply/tieslur/Tie-curvature_selection_with_clearance:
    post:
      operationId: RULE.Tie.curvature_selection_with_clearance
      summary: Tie curvature selected with clearance from noteheads
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: TieSlurAgent
        intent: placement
        priority: 305
        depends_on: []
        parameters:
          min_clearance_sp: 0.2
        exceptions: []
        trace:
        - docs/ties
        test_plan:
          cases:
          - name: clearance_respected
            expectations:
            - path: /minClearanceSP
              op: '>='
              value: 0.2
  /apply/accidental/Clef-mid_system_placement:
    post:
      operationId: RULE.Clef.mid_system_placement
      summary: Mid-system clef placement and spacing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: placement
        priority: 320
        depends_on: []
        parameters:
          left_padding_sp: 0.5
        exceptions: []
        trace:
        - docs/clefs
        test_plan:
          cases:
          - name: padding_applied
            expectations:
            - path: /xOffsetSP
              op: '>='
              value: 0.5
  /apply/accidental/KeySignature-courtesy_at_line_breaks:
    post:
      operationId: RULE.KeySignature.courtesy_at_line_breaks
      summary: Courtesy key signature at system breaks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: engraving
        priority: 330
        depends_on: []
        parameters:
          show_courtesy: true
        exceptions: []
        trace:
        - docs/key-signatures/courtesy
        test_plan:
          cases:
          - name: courtesy_enabled
            expectations:
            - path: /showCourtesy
              op: ==
              value: 1.0
  /apply/accidental/TimeSignature-courtesy_at_line_breaks:
    post:
      operationId: RULE.TimeSignature.courtesy_at_line_breaks
      summary: Courtesy time signature at system breaks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: engraving
        priority: 331
        depends_on: []
        parameters:
          show_courtesy: true
        exceptions: []
        trace:
        - docs/time-signatures/courtesy
        test_plan:
          cases:
          - name: courtesy_enabled
            expectations:
            - path: /showCourtesy
              op: ==
              value: 1.0
  /apply/verticalstack/Lyrics-vertical_alignment_with_baselines:
    post:
      operationId: RULE.Lyrics.vertical_alignment_with_baselines
      summary: Lyrics vertical alignment relative to staff baselines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 610
        depends_on: []
        parameters:
          min_distance_sp: 0.7
        exceptions: []
        trace:
        - docs/lyrics
        test_plan:
          cases:
          - name: minimum_distance
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.7
  /apply/collision/Ornaments-placement_above_below_with_collision:
    post:
      operationId: RULE.Ornaments.placement_above_below_with_collision
      summary: Ornaments placement above/below with collision avoidance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: CollisionAgent
        intent: placement
        priority: 360
        depends_on: []
        parameters:
          prefer_above: true
        exceptions: []
        trace:
        - docs/ornaments
        test_plan:
          cases:
          - name: collision_moves
            expectations:
            - path: /position/y
              op: '>='
              value: 0.0
  /apply/verticalstack/PartStaff-braces_brackets_layout:
    post:
      operationId: RULE.PartStaff.braces_brackets_layout
      summary: Braces and brackets placement for part/staff groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: layout
        priority: 620
        depends_on: []
        parameters:
          brace_margin_sp: 0.5
        exceptions: []
        trace:
        - docs/braces-brackets
        test_plan:
          cases:
          - name: margin_applied
            expectations:
            - path: /braceOffsets/margin
              op: '>='
              value: 0.5
  /apply/spacing/MultiVoice-stem_directions_up_down:
    post:
      operationId: RULE.MultiVoice.stem_directions_up_down
      summary: Stem directions in multi-voice contexts (up/down)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: notation
        priority: 130
        depends_on: []
        parameters:
          default_voice0_up: true
        exceptions: []
        trace:
        - docs/multi-voice
        test_plan:
          cases:
          - name: default_directions
            expectations:
            - path: /stemDirections/0
              op: ==
              value: 1.0
  /apply/pagination/MultiMeasureRests-layout_policy:
    post:
      operationId: RULE.MultiMeasureRests.layout_policy
      summary: Multi-measure rests layout policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: PaginationAgent
        intent: layout
        priority: 810
        depends_on: []
        parameters:
          min_width_sp: 2.0
        exceptions: []
        trace:
        - docs/multi-measure-rests
        test_plan:
          cases:
          - name: width_minimum
            expectations:
            - path: /widthSP
              op: '>='
              value: 2.0
  /apply/beaming/Tuplet-beaming_and_bracket_placement:
    post:
      operationId: RULE.Tuplet.beaming_and_bracket_placement
      summary: Tuplet beaming and bracket placement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: notation
        priority: 222
        depends_on:
        - RULE.Beaming.subdivision_preference
        parameters:
          show_bracket_outside_beam: true
        exceptions: []
        trace:
        - docs/tuplets
        test_plan:
          cases:
          - name: bracket_visible
            expectations:
            - path: /bracketPosition/y
              op: '>='
              value: 0.0
  /apply/spacing/Grace-clusters_width_policy:
    post:
      operationId: RULE.Grace.clusters_width_policy
      summary: Grace clusters width and spacing policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: SpacingAgent
        intent: spacing
        priority: 140
        depends_on: []
        parameters:
          scale_width_factor: 0.7
        exceptions: []
        trace:
        - docs/grace-notes
        test_plan:
          cases:
          - name: scaled_width
            expectations:
            - path: /widthScale
              op: ==
              value: 0.7
  /apply/beaming/CrossStaff-beaming_policy:
    post:
      operationId: RULE.CrossStaff.beaming_policy
      summary: Cross-staff beaming policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: BeamingAgent
        intent: placement
        priority: 223
        depends_on: []
        parameters:
          prefer_primary_staff: true
        exceptions: []
        trace:
        - docs/cross-staff
        test_plan:
          cases:
          - name: primary_staff
            expectations:
            - path: /beamStaff
              op: ==
              value: 1.0
  /apply/verticalstack/Ottava-placement_policy:
    post:
      operationId: RULE.Ottava.placement_policy
      summary: Ottava line placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 630
        depends_on: []
        parameters:
          min_distance_sp: 0.8
        exceptions: []
        trace:
        - docs/ottava
        test_plan:
          cases:
          - name: offset_minimum
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.8
  /apply/pagination/RepeatVolta-layout_policy:
    post:
      operationId: RULE.RepeatVolta.layout_policy
      summary: Repeat/Volta bracket layout policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: PaginationAgent
        intent: layout
        priority: 820
        depends_on: []
        parameters:
          min_height_sp: 1.0
        exceptions: []
        trace:
        - docs/repeats
        test_plan:
          cases:
          - name: minimum_height
            expectations:
            - path: /heightSP
              op: '>='
              value: 1.0
  /apply/verticalstack/RehearsalMarks-placement_policy:
    post:
      operationId: RULE.RehearsalMarks.placement_policy
      summary: Rehearsal mark placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 640
        depends_on: []
        parameters:
          top_margin_sp: 1.0
        exceptions: []
        trace:
        - docs/rehearsal-marks
        test_plan:
          cases:
          - name: top_margin
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 1.0
  /apply/verticalstack/TempoMarks-placement_policy:
    post:
      operationId: RULE.TempoMarks.placement_policy
      summary: Tempo mark placement policy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: placement
        priority: 641
        depends_on: []
        parameters:
          top_margin_sp: 0.8
        exceptions: []
        trace:
        - docs/tempo
        test_plan:
          cases:
          - name: top_margin
            expectations:
            - path: /yOffsetSP
              op: '>='
              value: 0.8
  /apply/accidental/Accidental-key_signature_positions_by_clef:
    post:
      operationId: RULE.Accidental.key_signature_positions_by_clef
      summary: Key signature accidental staff positions by clef and mode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: AccidentalAgent
        intent: placement
        priority: 405
        depends_on: []
        parameters:
          treble.sharps:
          - 8
          - 5
          - 9
          - 6
          - 3
          - 7
          - 4
          treble.flats:
          - 4
          - 7
          - 3
          - 6
          - 2
          - 5
          - 1
          bass.sharps:
          - 3
          - 6
          - 2
          - 5
          - 1
          - 4
          - 0
          bass.flats:
          - 6
          - 3
          - 7
          - 4
          - 1
          - 5
          - 2
        exceptions: []
        trace:
        - docs/key-signatures
        test_plan:
          cases:
          - name: treble_three_sharps
            expectations:
            - path: /positions/0
              op: ==
              value: 8.0
            - path: /positions/1
              op: ==
              value: 5.0
            - path: /positions/2
              op: ==
              value: 9.0
  /apply/ledger/Ledger-shorten_near_accidental:
    post:
      operationId: RULE.Ledger.shorten_near_accidental
      summary: Ledger line shortening when accidental adjacent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: LedgerAgent
        intent: shape
        priority: 500
        depends_on: []
        parameters:
          shorten_by: 0.4 sp
        exceptions: []
        trace:
        - docs/ledger
        - engraving-details/ledger-shortening
        test_plan:
          cases:
          - name: High note with sharp
            expectations:
            - path: /adjustedLengthSP
              op: ==
              value: -0.4
              tolerance: 0.0
  /apply/verticalstack/Vertical-min_dist_padding_and_stretch:
    post:
      operationId: RULE.Vertical.min_dist_padding_and_stretch
      summary: Staff and object vertical paddings within system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: VerticalStackAgent
        intent: layout
        priority: 600
        depends_on: []
        parameters:
          min_staff_gap: 1.5 sp
          min_text_above_staff: 0.7 sp
          stretch_weight: '1.0'
        exceptions: []
        trace:
        - docs/vertical-spacing
        - internals/VerticalAxisGroup
        test_plan:
          cases:
          - name: Lyrics+dynamics two staves
            expectations:
            - path: /minStaffGap
              op: '>='
              value: 1.5
              tolerance: 0.05
  /apply/dynamicstext/Dynamics-align_with_noteheads_and_stems:
    post:
      operationId: RULE.Dynamics.align_with_noteheads_and_stems
      summary: Align dynamics to local musical anchors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: DynamicsTextAgent
        intent: placement
        priority: 700
        depends_on: []
        parameters:
          y_offset_preference: below
          x_anchor_bias: columnCenter
        exceptions: []
        trace:
        - docs/dynamics-alignment
        test_plan:
          cases:
          - name: mp under beamed group
            expectations:
            - path: /dynamicPosition/y
              op: <=
              value: 0.0
  /apply/pagination/Pagination-castoff_fill_vs_overfull_penalties:
    post:
      operationId: RULE.Pagination.castoff_fill_vs_overfull_penalties
      summary: System breaking to avoid overfull/underfull pages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: PaginationAgent
        intent: pagination
        priority: 800
        depends_on:
        - RULE.Spacing.keep_inside_system_constraints
        parameters:
          overfull_penalty: '10'
          underfull_penalty: '2'
          widow_orphan_penalty: '3'
        exceptions: []
        trace:
        - docs/pagination
        test_plan:
          cases:
          - name: Two-page balance
            expectations:
            - path: /overfull
              op: ==
              value: 0.0
  /apply/opticalsizing/OpticalSize-stroke_and_spacing_scalars:
    post:
      operationId: RULE.OpticalSize.stroke_and_spacing_scalars
      summary: Adjust line weights and spacing with staff size
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      x-rule:
        agent: OpticalSizingAgent
        intent: optical
        priority: 900
        depends_on: []
        parameters:
          stroke_scalar: f(size)
          spacing_scalar: f(size)
        exceptions: []
        trace:
        - docs/optical-sizing
        test_plan:
          cases:
          - name: 15pt vs 20pt vs 26pt
            expectations:
            - path: /strokeScalar
              op: approx
              value: 1.0
              tolerance: 0.3
