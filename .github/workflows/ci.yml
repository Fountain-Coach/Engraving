name: Engraving CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      - name: Build OpenAPI (untyped)
        run: python scripts/build_openapi.py
      - name: Coverage gate
        run: python scripts/check_coverage.py
      - name: SMuFL gate
        run: python scripts/validate_smufl_inputs.py
      - name: Parity gate (ALL rules)
        run: python scripts/check_parity.py
      - name: Trace gate
        run: python scripts/check_trace.py
      - name: Build OpenAPI (typed parity)
        run: python scripts/build_openapi_typed.py
      - name: Typed parity gate
        run: |
          python - << 'PY'
          import yaml
          from pathlib import Path
          doc=yaml.safe_load(Path('openapi/rules-as-functions.typed.yaml').read_text())
          refs=str(doc)
          assert '#/components/schemas/RuleInput' not in refs and '#/components/schemas/RuleOutput' not in refs, 'Typed placeholders are not allowed'
          print('No typed placeholders present.')
          PY
      - name: Typed spec lint (determinism)
        run: python scripts/lint_typed_openapi.py
      - name: Rule tests gate (ratified rules)
        run: python scripts/check_rule_tests.py
      - name: Core rule scenario coverage
        run: python scripts/check_core_rule_scenarios.py
      - name: Property parity gate (grob properties)
        run: python scripts/check_property_parity.py
      - name: Audit coverage report
        run: |
          python scripts/audit_rules_coverage.py > audit.json
          echo "Audit summary:" && cat audit.json
          echo "### Engraving Audit" >> $GITHUB_STEP_SUMMARY
          echo "\n\n\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat audit.json >> $GITHUB_STEP_SUMMARY
          echo "\n\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: engraving-audit
          path: audit.json
